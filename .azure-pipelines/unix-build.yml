parameters:
  - name: 'platform'
    type: string

steps:
  - script: |
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      conda install mamba -c conda-forge
      mamba env create --file environment-dev.yml
    displayName: Install dependencies

  - script: |
      source activate xtensor-zarr
      mamba install gxx_linux-64 libgcc -c conda-forge
    condition: eq('${{ parameters.platform }}', 'Linux')
    displayName: Install conda-forge compilers

  - script: |
      source activate xtensor-zarr
      mamba install tbb==2020.2 -c conda-forge
    displayName: Workaround missing TBB

  - script: |
      source activate xtensor-zarr
      export LDFLAGS="${LDFLAGS} -Wl,-rpath,$CONDA_PREFIX/lib"
      export LINKFLAGS="${LDFLAGS}"
      mkdir build
      cd build
      cmake -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DDOWNLOAD_GTEST=ON -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX $(Build.SourcesDirectory)
    displayName: Configure xtensor-zarr
    workingDirectory: $(Build.BinariesDirectory)

  - script: |
      source activate xtensor-zarr
      make -j2 test_xtensor_zarr
    displayName: Build xtensor-zarr
    workingDirectory: $(Build.BinariesDirectory)/build

  - script: |
      source activate xtensor-zarr
      mkdir dev_tmp
      cd dev_tmp
      curl -LJO https://github.com/alimanfoo/zarrita/archive/master.tar.gz
      mkdir zarrita
      tar zxf zarrita-master.tar.gz -C zarrita --strip-components 1
      mv zarrita/zarrita.py ../test
    displayName: Install zarrita
    workingDirectory: $(Build.SourcesDirectory)

  - script: |
      source activate xtensor-zarr
      python $(Build.SourcesDirectory)/test/zarrita_write.py && python $(Build.SourcesDirectory)/test/zarr_write.py && ./test_xtensor_zarr && python $(Build.SourcesDirectory)/test/zarrita_read.py && python $(Build.SourcesDirectory)/test/zarr_read.py
    displayName: Test xtensor-zarr
    workingDirectory: $(Build.BinariesDirectory)/build/test
